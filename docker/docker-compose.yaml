services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: ostock_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/02-data.sql
    networks:
      - microservices-network

  vault:
    image: hashicorp/vault:1.15.0
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_ADDR: http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: server -dev -dev-root-token-id="root"
    networks:
      - microservices-network

  config-server:
    build:
      context: ../configserver
      dockerfile: Dockerfile
    image: ostock/configserver:0.0.1-SNAPSHOT
    container_name: config-server
    ports:
      - "8071:8071"
    environment:
      SPRING_PROFILES_ACTIVE: vault
      SPRING_CLOUD_CONFIG_SERVER_VAULT_HOST: vault
      SPRING_CLOUD_CONFIG_SERVER_VAULT_PORT: 8200
      SPRING_CLOUD_CONFIG_SERVER_VAULT_SCHEME: http
      SPRING_CLOUD_CONFIG_SERVER_VAULT_TOKEN: root
    depends_on:
      - vault
    networks:
      - microservices-network

  eureka-server:
    build:
      context: ../eurekaserver
      dockerfile: Dockerfile
    image: ostock/eureka-server:0.0.1-SNAPSHOT
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_CLOUD_CONFIG_URI: http://config-server:8071
    depends_on:
      - config-server
    networks:
      - microservices-network

  gateway-server:
    build:
      context: ../gatewayserver
      dockerfile: Dockerfile
    image: ostock/gateway-server:0.0.1-SNAPSHOT
    container_name: gateway-server
    ports:
      - "8072:8072"
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_CLOUD_CONFIG_URI: http://config-server:8071
    depends_on:
      - config-server
    networks:
      - microservices-network

  licensing-service:
    build:
      context: ../licensing-service
      dockerfile: Dockerfile
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    container_name: licensing-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: default,dev
      SPRING_CLOUD_CONFIG_URI: http://config-server:8071
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "health,info,refresh,mappings"
    depends_on:
      - config-server
      - postgres
      - eureka-server
    networks:
      - microservices-network

  organization-service:
    build:
      context: ../organization-service
      dockerfile: Dockerfile
    image: ostock/organization-service:0.0.1-SNAPSHOT
    container_name: organization-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_CLOUD_CONFIG_URI: http://config-server:8071
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "health,info,refresh,mappings"
    depends_on:
      - config-server
      - postgres
      - eureka-server
    networks:
      - microservices-network

volumes:
  postgres_data:

networks:
  microservices-network:
    driver: bridge